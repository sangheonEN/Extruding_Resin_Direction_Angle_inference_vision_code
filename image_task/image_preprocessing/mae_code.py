from sklearn.metrics import mean_squared_error
import numpy as np

GT = np.array([267,348.17,281.02,260.45,230.5,180.88,132.72,90.59,46.47])
predicted_value = np.array([267.01,349.8,280.77,258,226.84,180.18,130.19,90.97,48.27])

mse  = mean_squared_error(GT, predicted_value)


# prediction value 1 best, 2 worst

# 14 frame
# test_value = np.array([267.66, 346.96, 280.53, 260.86, 232.21, 183.38, 132.42, 90.66, 45.22])
# predicted_value = np.array([267.53, 348.16, 280.25, 259.4, 230.56, 179.01, 131.25, 91.55, 46.27])
# predicted_value2 = np.array([267.48, 347.81, 280.18, 259.59, 230.39, 178.83, 131.32, 91.16, 46.04])

# 13 frame
# test_value = np.array([267.43,347.5,280.92,260.85,231.31,182.06,132.24,90.47,47])
# predicted_value = np.array([267.11, 348.83,280.55,258.82,228.87,179.18,130.92,91.51,47.1])
# predicted_value2 = np.array([267.11, 348.66, 280.42, 258.7, 228.64, 178.76, 131.24, 90.94, 46.53])

# 12 frame
test_value = np.array([267,348.17,281.02,260.45,230.5,180.88,132.72,90.59,46.47])
predicted_value = np.array([267.01,349.8,280.77,258,226.84,180.18,130.19,90.97,48.27])
predicted_value2 = np.array([267.13,349.04,280.65,258.18,226.97,179.44,130.3,90.56,47.58])

# 11 frame
# test_value = np.array([267.31, 349.16, 281.13,260.1, 229.48, 180.61, 130.9, 90.56, 47.35])
# predicted_value = np.array([266.83,350.49,280.95,257.17,225.47,180.01,129.91,91.11,49.59])
# predicted_value2 = np.array([267.09,349.46,280.84,257.58,224.95,179.55,129.51,90.09,44.69])

# 10 frame
# test_value = np.array([267.19,349.81,282.01,259.63,227.55,180.25,131.28,91.09,48.52])
# predicted_value = np.array([266.15,352.72,281.2,256.76,222.68,181.67,129.47,91.24,50.39])
# predicted_value2 = np.array([266.11,350.89,281.18,254.89,222.88,181.08,129.18,88.68,49.69])

# 9 frame
# test_value = np.array([265.32,350.28,280.66,260,225.5,178.72,130.36,91.37,50.02])
# predicted_value = np.array([266.05,353.8,281.36,255.99,220.31,183.52,129.16,91.41,51.36])
# predicted_value2 = np.array([265.78,353.54,281.54,251.03,220.63,182.61,129.25,89.31,50.64])

mse  = mean_squared_error(test_value, predicted_value2)

print(mse)